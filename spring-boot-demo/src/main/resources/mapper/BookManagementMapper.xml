<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zld.demo.mapper.BookManagementMapper">
    <resultMap id="BaseResultMap" type="com.zld.demo.pojo.BookManagement">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="book_name" jdbcType="VARCHAR" property="bookName"/>
        <result column="author" jdbcType="VARCHAR" property="author"/>
        <result column="book_price" jdbcType="DECIMAL" property="bookPrice"/>
        <result column="book_type_id" jdbcType="INTEGER" property="bookTypeId"/>
        <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate"/>
        <result column="publish_house" jdbcType="VARCHAR" property="publishHouse"/>
        <result column="lend_date" jdbcType="TIMESTAMP" property="lendDate"/>
        <result column="lend_man" jdbcType="VARCHAR" property="lendMan"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id, book_name, author, book_price, book_type_id, publish_date, publish_house, lend_date,
        lend_man
    </sql>
    <select id="selectByExample" parameterType="com.zld.demo.pojo.BookManagementExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from book_management
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from book_management
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from book_management
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.zld.demo.pojo.BookManagementExample">
        delete from book_management
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insertBook" parameterType="com.zld.demo.pojo.BookManagement">
        insert into book_management (id, book_name, author,
        book_price, book_type_id, publish_date,
        publish_house, lend_date, lend_man
        )
        values (#{id,jdbcType=INTEGER}, #{bookName,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
        #{bookPrice,jdbcType=DECIMAL}, #{bookTypeId,jdbcType=INTEGER}, #{publishDate,jdbcType=TIMESTAMP},
        #{publishHouse,jdbcType=VARCHAR}, #{lendDate,jdbcType=TIMESTAMP}, #{lendMan,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.zld.demo.pojo.BookManagement">
        insert into book_management
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="bookName != null">
                book_name,
            </if>
            <if test="author != null">
                author,
            </if>
            <if test="bookPrice != null">
                book_price,
            </if>
            <if test="bookTypeId != null">
                book_type_id,
            </if>
            <if test="publishDate != null">
                publish_date,
            </if>
            <if test="publishHouse != null">
                publish_house,
            </if>
            <if test="lendDate != null">
                lend_date,
            </if>
            <if test="lendMan != null">
                lend_man,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="bookName != null">
                #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                #{author,jdbcType=VARCHAR},
            </if>
            <if test="bookPrice != null">
                #{bookPrice,jdbcType=DECIMAL},
            </if>
            <if test="bookTypeId != null">
                #{bookTypeId,jdbcType=INTEGER},
            </if>
            <if test="publishDate != null">
                #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="publishHouse != null">
                #{publishHouse,jdbcType=VARCHAR},
            </if>
            <if test="lendDate != null">
                #{lendDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lendMan != null">
                #{lendMan,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.zld.demo.pojo.BookManagementExample" resultType="java.lang.Long">
        select count(*) from book_management
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update book_management
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.bookName != null">
                book_name = #{record.bookName,jdbcType=VARCHAR},
            </if>
            <if test="record.author != null">
                author = #{record.author,jdbcType=VARCHAR},
            </if>
            <if test="record.bookPrice != null">
                book_price = #{record.bookPrice,jdbcType=DECIMAL},
            </if>
            <if test="record.bookTypeId != null">
                book_type_id = #{record.bookTypeId,jdbcType=INTEGER},
            </if>
            <if test="record.publishDate != null">
                publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.publishHouse != null">
                publish_house = #{record.publishHouse,jdbcType=VARCHAR},
            </if>
            <if test="record.lendDate != null">
                lend_date = #{record.lendDate,jdbcType=TIMESTAMP},
            </if>
            <if test="record.lendMan != null">
                lend_man = #{record.lendMan,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update book_management
        set id = #{record.id,jdbcType=INTEGER},
        book_name = #{record.bookName,jdbcType=VARCHAR},
        author = #{record.author,jdbcType=VARCHAR},
        book_price = #{record.bookPrice,jdbcType=DECIMAL},
        book_type_id = #{record.bookTypeId,jdbcType=INTEGER},
        publish_date = #{record.publishDate,jdbcType=TIMESTAMP},
        publish_house = #{record.publishHouse,jdbcType=VARCHAR},
        lend_date = #{record.lendDate,jdbcType=TIMESTAMP},
        lend_man = #{record.lendMan,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.zld.demo.pojo.BookManagement">
        update book_management
        <set>
            <if test="bookName != null">
                book_name = #{bookName,jdbcType=VARCHAR},
            </if>
            <if test="author != null">
                author = #{author,jdbcType=VARCHAR},
            </if>
            <if test="bookPrice != null">
                book_price = #{bookPrice,jdbcType=DECIMAL},
            </if>
            <if test="bookTypeId != null">
                book_type_id = #{bookTypeId,jdbcType=INTEGER},
            </if>
            <if test="publishDate != null">
                publish_date = #{publishDate,jdbcType=TIMESTAMP},
            </if>
            <if test="publishHouse != null">
                publish_house = #{publishHouse,jdbcType=VARCHAR},
            </if>
            <if test="lendDate != null">
                lend_date = #{lendDate,jdbcType=TIMESTAMP},
            </if>
            <if test="lendMan != null">
                lend_man = #{lendMan,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.zld.demo.pojo.BookManagement">
        update book_management
        set book_name = #{bookName,jdbcType=VARCHAR},
        author = #{author,jdbcType=VARCHAR},
        book_price = #{bookPrice,jdbcType=DECIMAL},
        book_type_id = #{bookTypeId,jdbcType=INTEGER},
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
        publish_house = #{publishHouse,jdbcType=VARCHAR},
        lend_date = #{lendDate,jdbcType=TIMESTAMP},
        lend_man = #{lendMan,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>